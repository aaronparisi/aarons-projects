{"version":3,"file":"react-stagger.umd.min.js","sources":["../src/index.js","../src/StaggerTiming.js"],"sourcesContent":["import {Component} from 'react'\nimport PropTypes from 'prop-types'\nimport StaggerTiming from './StaggerTiming'\n\nconst globalTiming = new StaggerTiming()\n\nclass Stagger extends Component {\n  static childContextTypes = {\n    stagger: PropTypes.object.isRequired,\n  }\n\n  static contextTypes = {\n    stagger: PropTypes.object,\n  }\n\n  static defaultProps = {\n    delay: 100,\n    in: true,\n    appear: true,\n  }\n\n  static propTypes = {\n    timing: PropTypes.instanceOf(StaggerTiming),\n    delay: PropTypes.oneOfType([\n      PropTypes.number,\n      PropTypes.arrayOf(PropTypes.number),\n    ]),\n    in: PropTypes.bool,\n    appear: PropTypes.bool,\n    children: PropTypes.oneOfType([PropTypes.node, PropTypes.func]),\n  }\n\n  staggerContext = {\n    subscribe: this.subscribe.bind(this),\n    value: false,\n    timing: this.props.timing || this.context.timing || globalTiming,\n  }\n  selfValue = this.props.in\n  subscribers = []\n  unsubscribe = null\n  state = {\n    value: false,\n    delay: 0,\n  }\n\n  componentWillMount() {\n    if (this.context.stagger) {\n      this.unsubscribe = this.context.stagger.subscribe(() =>\n        this.checkUpdate(),\n      )\n    }\n    if (!this.props.appear) {\n      this.checkUpdate(true)\n    }\n  }\n\n  componentDidMount() {\n    if (this.props.appear) {\n      this.checkUpdate()\n    }\n  }\n\n  componentWillReceiveProps(newProps) {\n    this.selfValue = newProps.in\n    this.checkUpdate()\n  }\n\n  componentWillUnmount() {\n    if (this.unsubscribe) {\n      this.unsubscribe()\n    }\n  }\n\n  checkUpdate(forceInstant) {\n    // Only stagger if self and all parents are active.\n    const parentValue = this.context.stagger ? this.context.stagger.value : true\n    const value = this.selfValue && parentValue\n\n    // Only continue if the value has changed.\n    if (value === this.staggerContext.value) {\n      return\n    }\n\n    this.staggerContext.value = value\n\n    const delay = this.calculateDelay(value, forceInstant)\n    this.setState({\n      value,\n      delay,\n    })\n  }\n\n  calculateDelay(value, forceInstant) {\n    // Get delay for self. Note, the actual delay is max of all stagger\n    // delays since last leaf stagger.\n    // stagger(300)    - 0\n    //   stagger(100)  - 0\n    //   stagger(100)  - 100\n    //   stagger(100)  - 200\n    // stagger(200)    - 400\n    //   stagger(100)  - 400\n    // stagger(500)    - 900\n\n    if (forceInstant) {\n      return 0\n    }\n\n    const timing = this.staggerContext.timing\n    const isLeaf = !this.subscribers.length\n    const [beforeDelay, afterDelay] = this.getOwnDelay()\n\n    // Add delay for self and get total delay since last leaf.\n    const totalDelay = value ? timing.getDelay(beforeDelay, isLeaf) : 0\n\n    if (!isLeaf) {\n      // Notify children of change.\n      this.subscribers.forEach(subscriber => {\n        subscriber()\n      })\n    }\n\n    // Add delay after children.\n    if (value) {\n      timing.getDelay(afterDelay, false)\n    }\n\n    return totalDelay\n  }\n\n  getOwnDelay() {\n    const {delay} = this.props\n    return Array.isArray(delay) ? delay : [delay, delay]\n  }\n\n  getChildContext() {\n    return {\n      stagger: this.staggerContext,\n    }\n  }\n\n  subscribe(handler) {\n    this.subscribers.push(handler)\n    return () => {\n      this.subscribers = this.subscribers.filter(h => h !== handler)\n    }\n  }\n\n  render() {\n    const {children} = this.props\n    if (typeof children === 'function') {\n      return children(this.state)\n    }\n    return children || null\n  }\n}\n\nexport default Stagger\n","const STAGGER_GROUP_WINDOW = 100\n\nclass StaggerTiming {\n  lastStagger = 0\n  currentDelay = 0\n  lastDelay = 0\n\n  getDelay(newDelay, commitDelay) {\n    const now = Date.now()\n    newDelay = +newDelay\n    if (now - this.lastStagger > STAGGER_GROUP_WINDOW) {\n      this.lastStagger = now\n      this.currentDelay = 0\n      this.lastDelay = 0\n    }\n\n    if (this.currentDelay > 0 || this.lastDelay > 0) {\n      this.lastDelay = Math.max(this.lastDelay, newDelay)\n    }\n\n    const delay = this.currentDelay + this.lastDelay\n    if (commitDelay) {\n      this.currentDelay += this.lastDelay\n      this.lastDelay = newDelay\n    }\n    return delay\n  }\n}\n\nexport default StaggerTiming\n"],"names":["globalTiming","lastStagger","currentDelay","lastDelay","getDelay","newDelay","commitDelay","now","Date","this","Math","max","delay","Stagger","staggerContext","_this","subscribe","bind","props","timing","context","selfValue","in","subscribers","unsubscribe","state","componentWillMount","stagger","_this2","checkUpdate","appear","componentDidMount","componentWillReceiveProps","newProps","componentWillUnmount","forceInstant","parentValue","value","calculateDelay","setState","isLeaf","length","getOwnDelay","beforeDelay","afterDelay","totalDelay","forEach","Array","isArray","getChildContext","handler","push","_this3","filter","h","render","children","Component","childContextTypes","PropTypes","object","isRequired","contextTypes","defaultProps"],"mappings":"+jBAIMA,EAAe,2CCDnBC,YAAc,OACdC,aAAe,OACfC,UAAY,qBAEZC,kBAASC,EAAUC,OACXC,EAAMC,KAAKD,SACLF,EACRE,EAAME,KAAKR,YAVU,WAWlBA,YAAcM,OACdL,aAAe,OACfC,UAAY,IAGfM,KAAKP,aAAe,GAAKO,KAAKN,UAAY,UACvCA,UAAYO,KAAKC,IAAIF,KAAKN,UAAWE,QAGtCO,EAAQH,KAAKP,aAAeO,KAAKN,iBACnCG,SACGJ,cAAgBO,KAAKN,eACrBA,UAAYE,GAEZO,SDnBLC,uKA0BJC,0BACaC,EAAKC,UAAUC,eACnB,SACCF,EAAKG,MAAMC,QAAUJ,EAAKK,QAAQD,QAAUnB,KAEtDqB,UAAYN,EAAKG,MAAMI,KACvBC,iBACAC,YAAc,OACdC,cACS,QACA,4VAGTC,yCACMjB,KAAKW,QAAQO,eACVH,YAAcf,KAAKW,QAAQO,QAAQX,UAAU,kBAChDY,EAAKC,iBAGJpB,KAAKS,MAAMY,aACTD,aAAY,gBAIrBE,6BACMtB,KAAKS,MAAMY,aACRD,2BAITG,mCAA0BC,QACnBZ,UAAYY,EAASX,QACrBO,2BAGPK,gCACMzB,KAAKe,kBACFA,2BAITK,qBAAYM,OAEJC,GAAc3B,KAAKW,QAAQO,SAAUlB,KAAKW,QAAQO,QAAQU,MAC1DA,EAAQ5B,KAAKY,WAAae,KAG5BC,IAAU5B,KAAKK,eAAeuB,YAI7BvB,eAAeuB,MAAQA,MAEtBzB,EAAQH,KAAK6B,eAAeD,EAAOF,QACpCI,0CAMPD,wBAAeD,EAAOF,MAWhBA,SACK,MAGHhB,EAASV,KAAKK,eAAeK,OAC7BqB,GAAU/B,KAAKc,YAAYkB,SACChC,KAAKiC,cAAhCC,OAAaC,OAGdC,EAAaR,EAAQlB,EAAOf,SAASuC,EAAaH,GAAU,SAE7DA,QAEEjB,YAAYuB,QAAQ,kBAMvBT,KACKjC,SAASwC,GAAY,GAGvBC,eAGTH,2BACS9B,EAASH,KAAKS,MAAdN,aACAmC,MAAMC,QAAQpC,GAASA,GAASA,EAAOA,gBAGhDqC,0CAEaxC,KAAKK,6BAIlBE,mBAAUkC,0BACH3B,YAAY4B,KAAKD,GACf,aACA3B,YAAc6B,EAAK7B,YAAY8B,OAAO,mBAAKC,IAAMJ,kBAI1DK,sBACSC,EAAY/C,KAAKS,MAAjBsC,eACiB,mBAAbA,EACFA,EAAS/C,KAAKgB,OAEhB+B,GAAY,SAlJDC,oBAAhB5C,EACG6C,2BACIC,EAAUC,OAAOC,YAFxBhD,EAKGiD,sBACIH,EAAUC,QANjB/C,EASGkD,oBACE,QACH,UACI"}